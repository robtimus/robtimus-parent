<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE module PUBLIC "-//Checkstyle//DTD Checkstyle Configuration 1.3//EN" "https://checkstyle.org/dtds/configuration_1_3.dtd">
<!--
  Copyright 2023 Rob Spoor

  Licensed under the Apache License, Version 2.0 (the "License");
  you may not use this file except in compliance with the License.
  You may obtain a copy of the License at

      http://www.apache.org/licenses/LICENSE-2.0

  Unless required by applicable law or agreed to in writing, software
  distributed under the License is distributed on an "AS IS" BASIS,
  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  See the License for the specific language governing permissions and
  limitations under the License.
-->

<!--
  This configuration file is compatible with CheckStyle 9.3 and up.
  It requires com.github.robtimus:checkstyle-extension:1.0 or up
-->
<module name="Checker">
  <property name="severity" value="warning"/>
  <module name="TreeWalker">
    <!-- Annotations -->
    <module name="AnnotationLocation">
      <property name="tokens" value="CLASS_DEF,INTERFACE_DEF,PACKAGE_DEF,ENUM_CONSTANT_DEF,ENUM_DEF,METHOD_DEF,CTOR_DEF,VARIABLE_DEF,ANNOTATION_DEF,ANNOTATION_FIELD_DEF,RECORD_DEF,COMPACT_CTOR_DEF"/>
      <property name="allowSamelineSingleParameterlessAnnotation" value="false"/>
    </module>
    <module name="AnnotationUseStyle"/>
    <module name="MissingDeprecated"/>
    <module name="MissingOverride"/>
    <module name="PackageAnnotation"/>
    <module name="SuppressWarnings"/>
    <module name="SuppressWarningsHolder"/>

    <!-- Block Checks -->
    <module name="AvoidNestedBlocks"/>
    <module name="EmptyBlock">
      <property name="option" value="text"/>
      <property name="tokens" value="LITERAL_WHILE,LITERAL_TRY,LITERAL_CATCH,LITERAL_FINALLY,LITERAL_DO,LITERAL_IF,LITERAL_ELSE,LITERAL_FOR,INSTANCE_INIT,STATIC_INIT,LITERAL_SWITCH,LITERAL_SYNCHRONIZED,LITERAL_CASE,LITERAL_DEFAULT,ARRAY_INIT"/>
    </module>
    <module name="EmptyCatchBlock"/>
    <module name="LeftCurly">
      <property name="ignoreEnums" value="false"/>
    </module>
    <module name="NeedBraces"/>
    <module name="RightCurly">
      <property name="tokens" value="LITERAL_TRY,LITERAL_CATCH,LITERAL_FINALLY,LITERAL_IF,LITERAL_ELSE,CLASS_DEF,METHOD_DEF,CTOR_DEF,LITERAL_FOR,LITERAL_WHILE,LITERAL_DO,STATIC_INIT,INSTANCE_INIT,ANNOTATION_DEF,ENUM_DEF,INTERFACE_DEF,RECORD_DEF,COMPACT_CTOR_DEF"/>
    </module>

    <!-- Class Design -->
    <module name="FinalClass"/>
    <module name="HideUtilityClassConstructor"/>
    <module name="InterfaceIsType"/>
    <module name="MutableException"/>
    <module name="OneTopLevelClass"/>
    <module name="ThrowsCount">
      <property name="max" value="3"/>
    </module>

    <!-- Coding -->
    <module name="ArrayTrailingComma"/>
    <module name="AvoidDoubleBraceInitialization"/>
    <module name="CovariantEquals"/>
    <module name="DeclarationOrder">
      <property name="ignoreModifiers" value="true"/>
    </module>
    <module name="DefaultComesLast"/>
    <module name="EmptyStatement"/>
    <module name="EqualsAvoidNull"/>
    <module name="EqualsHashCode"/>
    <module name="FallThrough">
      <property name="checkLastCaseGroup" value="true"/>
      <property name="reliefPattern" value="\$FALL-THROUGH\$|fallthru|falls? ?through"/>
    </module>
    <module name="IllegalInstantiation">
      <property name="classes" value="java.lang.Boolean, java.lang.Byte, java.lang.Character, java.lang.Short, java.lang.Integer, java.lang.Long, java.lang.Float, java.lang.Double"/>
    </module>
    <module name="IllegalThrows"/>
    <module name="InnerAssignment"/>
    <module name="MissingSwitchDefault"/>
    <module name="MultipleVariableDeclarations"/>
    <module name="NestedForDepth">
      <property name="max" value="3"/>
    </module>
    <module name="NestedIfDepth">
      <property name="max" value="3"/>
    </module>
    <module name="NestedTryDepth">
      <property name="max" value="3"/>
    </module>
    <module name="NoFinalizer"/>
    <module name="OneStatementPerLine">
      <property name="treatTryResourcesAsStatement" value="true"/>
    </module>
    <module name="PackageDeclaration"/>
    <module name="SimplifyBooleanExpression"/>
    <module name="SimplifyBooleanReturn"/>
    <module name="StringLiteralEquality"/>
    <module name="SuperClone"/>
    <module name="SuperFinalize"/>
    <module name="UnnecessaryParentheses"/>
    <module name="UnnecessarySemicolonAfterOuterTypeDeclaration"/>
    <module name="UnnecessarySemicolonAfterTypeMemberDeclaration"/>
    <module name="UnnecessarySemicolonInEnumeration"/>
    <module name="UnnecessarySemicolonInTryWithResources"/>

    <!-- Imports -->
    <module name="AvoidStarImport"/>
    <module name="IllegalImport">
      <property name="illegalPkgs" value="sun, sunw, com.oracle, com.sun"/>
    </module>
    <module name="ImportOrder">
      <property name="option" value="top"/>
      <property name="groups" value="java,javax,jakarta,org,com,nl"/>
      <property name="separated" value="false"/>
      <property name="ordered" value="true"/>
      <property name="separatedStaticGroups" value="false"/>
      <property name="sortStaticImportsAlphabetically" value="true"/>
    </module>
    <module name="RedundantImport"/>
    <module name="UnusedImports"/>

    <!-- Javadoc Comments -->
    <module name="AtclauseOrder"/>
    <module name="InvalidJavadocPosition"/>
    <module name="JavadocBlockTagLocation"/>
    <module name="JavadocContentLocation"/>
    <module name="JavadocMethod">
      <property name="id" value="JavadocMethod"/>
      <property name="accessModifiers" value="public,protected"/>
      <property name="tokens" value="METHOD_DEF,CTOR_DEF,COMPACT_CTOR_DEF"/>
    </module>
    <module name="JavadocMethod">
      <property name="id" value="AnnotationsJavadocMethod"/>
      <property name="accessModifiers" value="public,protected"/>
      <property name="allowMissingReturnTag" value="true"/>
      <property name="tokens" value="ANNOTATION_FIELD_DEF"/>
    </module>
    <module name="JavadocMissingLeadingAsterisk"/>
    <module name="JavadocMissingWhitespaceAfterAsterisk"/>
    <module name="JavadocStyle">
      <property name="id" value="VisibleJavadocStyle"/>
      <property name="scope" value="protected"/>
      <property name="checkEmptyJavadoc" value="true"/>
    </module>
    <module name="JavadocStyle">
      <property name="id" value="InvisibleJavadocStyle"/>
      <property name="scope" value="private"/>
    </module>
    <module name="JavadocType">
      <property name="excludeScope" value="anoninner"/>
      <property name="authorFormat" value="^.+ .+$"/>
      <property name="versionFormat" value="^\d+\.\d+"/>
    </module>
    <module name="JavadocVariable">
      <property name="scope" value="protected"/>
    </module>
    <module name="MissingJavadocMethod">
      <property name="scope" value="protected"/>
    </module>
    <module name="MissingJavadocPackage"/>
    <module name="MissingJavadocType">
      <property name="scope" value="protected"/>
    </module>
    <module name="NonEmptyAtclauseDescription"/>
    <module name="RequireEmptyLineBeforeBlockTagGroup"/>

    <!-- Miscellaneous -->
    <module name="ArrayTypeStyle"/>
    <module name="CommentsIndentation"/>
    <module name="Indentation">
      <property name="arrayInitIndent" value="8"/>
      <property name="lineWrappingIndentation" value="8"/>
    </module>
    <module name="NoCodeInFile"/>
    <module name="OuterTypeFilename"/>
    <module name="UpperEll"/>

    <!-- Modifiers -->
    <module name="ModifierOrder"/>
    <module name="RedundantModifier"/>

    <!-- Naming Conventions -->
    <module name="ClassTypeParameterName">
      <property name="format" value="^[A-Z][A-Z0-9]{0,2}$"/>
    </module>
    <module name="ConstantName">
      <property name="format" value="^[A-Z][A-Z0-9]*(_[A-Z0-9]+)*|uiClassID$"/>
    </module>
    <module name="InterfaceTypeParameterName">
      <property name="format" value="^[A-Z][A-Z0-9]{0,2}$"/>
    </module>
    <module name="LambdaParameterName">
      <property name="format" value="^([a-z][a-zA-Z0-9]*|_)$"/>
    </module>
    <module name="LocalFinalVariableName">
      <property name="format" value="^([a-z][a-zA-Z0-9]*|_)$"/>
    </module>
    <module name="LocalVariableName">
      <property name="format" value="^([a-z][a-zA-Z0-9]*|_)$"/>
    </module>
    <module name="MemberName"/>
    <module name="MethodName"/>
    <module name="MethodTypeParameterName">
      <property name="format" value="^[A-Z][A-Z0-9]{0,2}$"/>
    </module>
    <module name="PackageName"/>
    <module name="ParameterName"/>
    <module name="PatternVariableName">
      <property name="format" value="^([a-z][a-zA-Z0-9]*|_)$"/>
    </module>
    <module name="RecordComponentName"/>
    <module name="RecordTypeParameterName">
      <property name="format" value="^[A-Z][A-Z0-9]{0,2}$"/>
    </module>
    <module name="StaticVariableName"/>
    <module name="TypeName"/>

    <!-- Size Violations -->
    <module name="OuterTypeNumber"/>

    <!-- Whitespace -->
    <module name="EmptyForInitializerPad">
      <property name="option" value="space"/>
    </module>
    <module name="EmptyForIteratorPad">
      <property name="option" value="space"/>
    </module>
    <module name="EmptyLineSeparator">
      <property name="allowNoEmptyLineBetweenFields" value="true"/>
      <property name="allowMultipleEmptyLines" value="false"/>
      <property name="allowMultipleEmptyLinesInsideClassMembers" value="false"/>
    </module>
    <module name="GenericWhitespace"/>
    <module name="MethodParamPad"/>
    <module name="NoLineWrap"/>
    <module name="NoWhitespaceAfter">
      <property name="tokens" value="AT,INC,DEC,UNARY_MINUS,UNARY_PLUS,BNOT,LNOT,DOT,ARRAY_DECLARATOR,INDEX_OP,METHOD_REF"/>
    </module>
    <module name="NoWhitespaceBefore">
      <property name="allowLineBreaks" value="true"/>
      <property name="tokens" value="COMMA,SEMI,POST_INC,POST_DEC,DOT,GENERIC_END,ELLIPSIS,LABELED_STAT,METHOD_REF"/>
    </module>
    <module name="NoWhitespaceBeforeCaseDefaultColon"/>
    <module name="OperatorWrap">
      <property name="tokens" value="QUESTION,COLON,EQUAL,NOT_EQUAL,DIV,PLUS,MINUS,STAR,MOD,SR,BSR,GE,GT,SL,LE,LT,BXOR,BOR,LOR,BAND,LAND,LITERAL_INSTANCEOF,TYPE_EXTENSION_AND,ASSIGN,DIV_ASSIGN,PLUS_ASSIGN,MINUS_ASSIGN,STAR_ASSIGN,MOD_ASSIGN,SR_ASSIGN,BSR_ASSIGN,SL_ASSIGN,BXOR_ASSIGN,BOR_ASSIGN,BAND_ASSIGN,METHOD_REF"/>
    </module>
    <module name="ParenPad"/>
    <module name="SeparatorWrap">
      <property name="option" value="nl"/>
      <property name="tokens" value="DOT,AT,METHOD_REF"/>
    </module>
    <module name="SeparatorWrap">
      <property name="option" value="eol"/>
      <property name="tokens" value="COMMA,ELLIPSIS"/>
    </module>
    <module name="SingleSpaceSeparator">
      <property name="validateComments" value="true"/>
    </module>
    <module name="TypecastParenPad"/>
    <module name="WhitespaceAfter"/>
    <module name="WhitespaceAround">
      <property name="tokens" value="ASSIGN,ARRAY_INIT,BAND,BAND_ASSIGN,BOR,BOR_ASSIGN,BSR,BSR_ASSIGN,BXOR,BXOR_ASSIGN,COLON,DIV,DIV_ASSIGN,DO_WHILE,EQUAL,GE,GT,LAMBDA,LAND,LCURLY,LE,LITERAL_CATCH,LITERAL_DO,LITERAL_ELSE,LITERAL_FINALLY,LITERAL_FOR,LITERAL_IF,LITERAL_RETURN,LITERAL_SWITCH,LITERAL_SYNCHRONIZED,LITERAL_TRY,LITERAL_WHILE,LOR,LT,MINUS,MINUS_ASSIGN,MOD,MOD_ASSIGN,NOT_EQUAL,PLUS,PLUS_ASSIGN,QUESTION,RCURLY,SL,SLIST,SL_ASSIGN,SR,SR_ASSIGN,STAR,STAR_ASSIGN,LITERAL_ASSERT,TYPE_EXTENSION_AND"/>
      <property name="ignoreEnhancedForColon" value="false"/>
    </module>
  </module>

  <!-- Javadoc Comments -->
  <module name="JavadocPackage"/>

  <!-- Miscellaneous -->
  <module name="NewlineAtEndOfFile">
    <property name="lineSeparator" value="lf_cr_crlf"/>
  </module>
  <module name="Translation"/>
  <module name="UniqueProperties"/>

  <!-- Size Violations -->
  <module name="LineLength">
    <property name="max" value="150"/>
  </module>

  <!-- Whitespace -->
  <module name="FileTabCharacter">
    <property name="eachLine" value="true"/>
  </module>

  <!-- from com.github.robtimus:checkstyle-extension -->
  <module name="LicenseComment">
    <property name="includeFilename" value="true"/>
    <property name="includeCopyright" value="true"/>
    <property name="includeEmptyLineBeforeLicenseText" value="true"/>
    <property name="predefinedLicenseText" value="Apache-2.0"/>
  </module>
  <module name="NoSubsequentBlankLines"/>
  <module name="NoTrailingWhitespace"/>
  <module name="NoBlankLineAfterSymbols"/>
  <module name="NoBlankLineBeforeSymbols"/>

  <module name="SuppressWarningsFilter" />

  <!-- Don't require package, type or method Javadoc for test classes -->
  <module name="SuppressionSingleFilter">
    <property name="files" value="src[\\/]test[\\/]java[\\/].*"/>
    <property name="checks" value="JavadocPackage|JavadocStyle|JavadocVariable|MissingJavadocPackage|MissingJavadocType|MissingJavadocMethod"/>
  </module>
  <!-- Don't require a max length for resources -->
  <module name="SuppressionSingleFilter">
    <property name="files" value="src[\\/](main|test)[\\/]resources[\\/].*"/>
    <property name="checks" value="LineLength"/>
  </module>
  <!-- Disable all checks in generated code -->
  <module name="SuppressionSingleFilter">
    <property name="files" value="target[\\/](classes|generated-.*)[\\/].*"/>
    <property name="checks" value=".*"/>
  </module>
  <!-- Allow per-project custom suppressions -->
  <module name="SuppressionFilter">
    <property name="file" value="${basedir}/checkstyle_suppressions.xml"/>
    <property name="optional" value="true"/>
  </module>
</module>
